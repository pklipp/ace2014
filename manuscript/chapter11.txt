# Kasia Mrowca: The Art of Saying No 

Kasia: Hi, guys. I hope that you can all hear me, especially those sitting in the back. And I have surprise for you, if you’re sitting in the back here’s a nice lady with microphone. Just please, stand and show you. Yeah. I will be asking questions and if you’re sitting in the front those questions will not be asked for you and if you’re sitting in the back this nice lady will pick a victim, I’m sorry, a volunteer  to answer a question. So, beware and better go closer. 

And just, you know, starting my presentation I heard that the best presentations have an animal in slides and it’s a particular animal called a cat. Because I don’t own a cat and I own a dog I decided to, for the dog. I hope this presentation will be awesome. And yeah, what else?

Basically I love skiing and because it’s a sport people cheer each other during the competition just to feel the strength of the crowd. Because it’s my first talk in English I would love to have a cheer from you, so, maybe some applause, or, you know maybe some cheering and laughing. I can’t hear you, guys. Oh, excellent. 

So, moving on. We’ll today, we’ll talk about requirements and the art of saying no. And I have a few basic exercises to begin with. And your task will be just: read what is in the slide. So, the first task is really, really easy. I can’t hear you. I can’t hear you. Louder. It’s easy. Come on!

Audience: Yes!

Kasia: Excellent. And now it’s the hard task. 

Audience: No!

Kasia: I can’t hear you. 

Audience: No!

Kasia: You know, you’re the masters. You don’t need me so I’m going. Bye! Oh, of course it was a joke. Basically we’ll talk a bit about psychology and why actually saying no and disagreeing is quite hard for us. We’ll, you know, talk about how to hear, to hear the needs. And, you know, we’ll be talking about visualization, so translating from the business language to the IT language which you are all familiar with. And also we will talk about arguing and how to give arguments and in the end I will share some few tips and tricks if we have enough time, of course. 

Basically, why should you care? Why should you see this presentation and pay attention? I’ll give you one minute to read. So, basically SAP is my favorite example of a software. It’s quite expensive one and in the beginning of development of this tool, in the early 90’s there was a company called Foxmeyer Drugs. They basically bought SAP and if they only bought it, not implement it, they will probably survive and were keeping up. And they were quite stubborn and they bought it. They tried to implement it and fit it to their process and it didn’t suit. SAP is an enterprise resource planning system and in those days there were like more manufacturing planning systems than enterprise and it simply was for manufacturing companies not for a pharmacy company. And because they were struggling with this, they went bankrupt. It’s quite nice case study for this because it also shows that if we have responsibility among all people in the company and, you know, and we are cooperating then we are moving forward all together. And basically this talk is not about teaching business people how to do their business because, you know, they are experts. You’re supposed to see there a YouTube movie so now you it’s supposed to do, you know, to have a laugh or cheer. So.

Audience: Yey!

Kasia: And sometimes it is actually hard to know which feature is needed or which is not needed and this quite nicely reflects this situation. And returning to my SAP example. If we have a system which is basically for accountants and their beginning, the beginning of the SAP, it was a system for accountants and you decided for example to overwrite this system because it’s quite old, maybe it’s not flexible enough and you have in your company a visionary who says you “Ok, we don’t have ready product, yet. We have a bit started, a bit started here and another bit here and it’s not working yet but he’s keeping with new ideas for new features. One of the new brilliant features is how about implementing Google handouts in our SAP system?” Brilliant idea. You know accountant have to talk to each other so we can allow them to talk. Maybe it’s a brilliant idea but if we have, you know, bits of software started and not finished and our basic produce is not working and we are talking about new and fancy features it usually won’t work. So, it’s the time to say “Ok. It’s a brilliant idea but first we should finish something. Deliver it. Ship it to the customer and then making new features.” So, it’s the basic example.

So, why you should. No. basically to support business decisions, to show that there are some constraints from our technical perspective that no analyze to deliver is for example as quickly as the business expects or from our perspective it’s a waste. So, waste of time, waste of money. And it’s not our money, it’s the business money and they usually don’t understand this because. Ah, we will see during my presentation why they like a business, don’t understand it. So, I want to express also that we all here are responsible for creating a software and I really strongly believe that you are really well talented people here and you want to create a masterpiece not just piece of software about something which is really excellent and users like to use it. So, returning to this SAP example. Just imagine that if you have a system and your users hate it and you know comparing it to this, you know, for example to the SAP and how do you feel it? You are not feeling well, so it’s sometimes really worthy to say that something, you know, is missing, something is not suiting. And if you just disagree then you can take action. If you are just keeping  silence, you deliver it to the customer and he won’t be satisfied. 

So, there are commoner possibilities to great, great software because we all, you know, I think we all work in Agile, at least our companies think so. So, basically how many of us, of you deal with customers on daily basis? Please raise your hand only. Ok. Quite a lot of you. So, maybe the second question. How many of you is working in, you know, some kind of Agile methodology? Ok, it’s interesting. Basically, Agile is about communication and communication is about customer also. So, it’s quite a big difference in relations. But basically how many of you deal with some kind of requirements, with operating them or something? Just raise your hand. So, quite a lot. So, you know, if you’re dealing with requirement, if you’re dealing with customer it’s also your responsibility to say that something is missing, that something is not ok. 

Moving on how to actually say no and why it’s so hard with about psychology and especially about sociology, about why no is so scary. Basically for us as human beings disagreeing with someone is scary. I know that you are all brave, that’s why all are sitting in the back and want to have questions. Oh, there is, I see one volunteer. Ok, could you say why saying no is hard for you? If of course it is. The person who just raised the hand. Silence. Oh, ok. 

Man: Now it works. Saying no is hard for me because I’m a harmony addicted guy. I don’t like conflict at all. So if somebody asks me something that sounds reasonable I want to help and I want to make it happen. 

Kasia: Yeah. Basically I want to show you that saying no it’s not about conflicts so I hope that we’ll go to this part. 

There is also a thing called conformity and it’s the best way to explaining about an example. In the early 50’s there was a guy called Ash and he made this basic example, this basic research. Here is one line and here are two lines and there were several participants. Four of them were paid actors and one of them was an observed person. And then people were asked which of those three lines is exactly the same as this one. And actors were of course paid to say certain response and for example if actor say  “Ok, the same line is A.” Another say the same. And finally what do you think? What the last person said? I need volunteer from the back. Oh, we have some nice volunteer there. But you don’t have to raise your hand to just..ok. if you don’t want to have one volunteer jus speak up loudly. What do you think? 

Man 2: C.

Kasia: Oh, there is a C. Now, usually people were hesitating on saying A and 70% of people say A. So it’s quite a big number and in the contrary if they were not saying loud their answers but they were writing them down, only 1% of participants make a mistake and choose the wrong line. So, you know it’s quite a big difference. After the research they were asked why they choose the wrong answer. And they usually they say “I don’t feel that I’m expert in this to, expert in this topic.” , “I don’t feel comfortable.” Basically they don’t feel comfortable and they don’t want to disagree with the group. And sometimes if you just keep silence and you see that something is wrong with requirement is also like this thing and basically you can easily overcome it if you know there is this effect. You can actually make a different choice than the group. And it’s ok, nobody will kill you.  And I think in the end they will like you because you have your own opinion and that you are able to express it. 

So, what else is cause that no is so hard to say? First of all assertiveness. So, the way of expressing our own opinion is usually like misunderstood and it’s supposed, people think that it’s aggressive.  It is not aggressive if it is polite, if you say it “I’m sorry. I don’t feel comfortable with your opinion, with what you are saying about and I have different opinion.” It’s quite ok. Of course if you’re trying to say to people “Oh, come on. You’re stupid. You’re requirements are stupid.” this is aggressive. If you just say that you have another opinion, it’s ok and it’s actually worthy. Don’t be sacred to do so. 

The next thing, criticism. Also people don’t know how to give constructive criticism and sometimes they also say something like “Ok. This is stupid” and nobody knows what exactly they should actually do that’s have better results. And we say, if we say that for example in our requirements there are missing acceptance criteria and maybe these acceptance criteria can make this requirement better for us to understand. Then, you know, it’s more ok. And of course we are reading self helping books in order to make our communication better and it’s not always working and I sometimes wondering why we are believing in, you know, writings of people who are not psychologists and if you are for example in a conference, if it was coding conference and I start talking about code and I’m not programmer, probably the audience will be ”What she’s talking about? Why to believe her?” Yeah? And with those books is something similar. Don’t believe in that kind of books and the worst part of, you know, teaching yourself communication is that you think that you have bad communication style. And I think it’s not true because all of us have their own communication style. And I think it’s ok if you’re not a market person to negotiate contracts and you have your own maybe a little bit awkward style, but you are able to talk, so you are able to communicate with people, then it’s everything ok. Just move forward and don’t try to use any of the fancy stuff that marketing people do because it’s usually, it’s usually only awkward and artificial and not working well. And because it’s not working well you just keep being frustrated, frustrated, frustrated. So, please, remember have own communication style and go forward with talking about requirements and really important thing, try to hear the real needs. A customer has a lot of whishes like I say about this SAP example and this Google handout inside it. Ok? It’s nice wish, but we sometimes should to wonder if our business is really needed. If we of course, we can deliver everything and they and then give the appropriate bill to the customer and make him, you know, to went, go bankrupt. But it’s not the point and usually we kill, let’s say, one customer, we won’t get  a chance to have another. So, unless we are SAP. 

Ok, because my time is running out I also have few active listening tips how to, how to actually listen to another person, but we’ll do it really quickly. And basically there are some stuff which are more needed and things that are really not necessary during the business relationship especially. So, basically if we have conference code, please, do not do multitasking. Multitasking is writing e-mails and talking. So, if you’re agreeing requirements, please, pay attention what other people are doing and saying. Don’t check e-mails. If you are in a conference room, just don’t you know, tweet or maybe your Facebook things on your phone just to pay attention. It’s quite basic thing but it really works. Moreover, of course, ask questions about, the questions will talk about more later and I think that today and yesterday there will be and were a lot of things connected with asking questions that you should know.

Really important thing is also to summarize, clarify and paraphrase the things that you are talking about with the customer, client or whoever you talk to in order to agree requirements. And if you are paraphrasing, just use your own words. Sometimes there is also technique that encourages you to use the same word as the client did. But it may not work if you don’t know the business vocabulary. I have for example from my life and I was agreeing terms connected with “taxi” but in the airline business. In airline business, taxi is this period of time when an airplane is on the ground and it’s, you know, between taking off and going to the terminal and between and basically it is. And I thought that taxi basically means driving a cab, you know, like to the airport. So, there are completely two different concepts and, you know, it was misunderstanding. So better use the words that you know best. Yeah, so, there’s everything that you can use. 

And of course do not interrupt the speaker.  It’s a good advice that we usually forget especially if you are really keen about some particular technology and I want to say “Ok, you have really nice solution for this.” Then we are just start to talk about technology. It’s fine but we have to remember that we are, have to, you know, just dig in the requirement and talk more about it, and listen about it, not necessarily just overwhelm speaker with how fast the technology is. Ok. 

So, now it’s I think the most important part of my presentation. So, how to boost our communication and I love charts, schemas and things like that. Basically you have to remember that notation is not really important. If you have some remarks how to read actually a chart then it’s ok. Remember that maybe you know notation like UML. I know UML but my business partners don’t know UML, so who cares that I know it and I present it, and it’s, you know, too complicated for them. Simplify charts and use something which is inspired by notation and remember to give legend to our people to understand those things. And basically I prefer to keep documentation in this way because it’s easier to read this chart instead of document with 100 pages of description in a plain text without single table, without single picture. So, basically I keep it like this. And also when I agree with a customer about terms I also present this and talk on the basis of this. So, use the charts. 

And if you are using user stories and you are bored with it, you can use this way, this thing. It’s called story boarding. It’s about, basically about drawing the same thing that you would write. So, how to use our feature that we want to implement. It’s a fun, it’s like to enhance creativity during the team. It could be an experiment after this, a conference, just to go and have fun and try to draw it. And moreover you also pay attention to customer, so it’s more, more, you know, more focused because usually if you are using, you know, this standard formula for user stories we sometimes forget about our basic user that the stories, you know, address to. And when we are trying to draw it we are actually get more focused. So, yeah. 

Mock-ups. The next favorite thing. If you don’t have a tool you can use only pen and paper. You can also draw them on a blackboard or whiteboard. But remember, take picture afterwards. And you can also use a tool. I recommend tools that make Pdf files because first I use to do mock-ups in ..or visual studio and then show it to the customer. And guess what? They thought it’s the ready application. They could click it. They said “Oh, come on. It’s, there are a few features missing but could you deploy tomorrow?” and, you know, it’s sometimes really hard to say them “You know, it’s a mock-up. It’s not working. It’s only a concept.” “You know but I can click it. I could put data there so it’s working. It’s enough for me. Really. I don’t need any other fancy stuff. Just deploy it.” Yeah and that’s the discussion really especially with people which are not really familiar with IT and computers. And really from the business perspective there’s a lot of like this. So, better those which you can click things so you can have a flow there are excellent because even the less familiar IT user want thing that it’s a real application, that it’s a real software which works. 

So, use the tools and if you have those visualizations just ask questions. If you have this feature that you really don’t want to implement. Just make a smock-up and show that it won’t work properly for the users. Because if you’re just talking and you don’t have “evidence”, it’s stuck. Then you can show it and really I don’t like approach which I met recently “Ok. We just implement some features. We have no idea how it should working, but we’ll keep implementing it.” And maybe it could be ok if we have a customer who validates if it’s good or not.  But if we don’t have a customer and we are for the fifth time implementing the same feature and implementing it taking it, taking like 2 months, it’s no, it’s not really effective and it’s only wasting the money. It’s better to make a mock-up and show it, ok, it’s not working, we should change something.  And remember not to be so perfect because there are great US people who can help us with making the software nice. It’s only about how it should work. So, basically these were the basic how to communicate and how to translate those business needs into our technology language and vice-versa. So, if you have drawings, mock-ups, then communicate. It is really easier, especially if you are try to compare solutions. Just imagine that you have this feature that you really don’t want to implement and some alternative. You can show and this mock-up. There is this alternative. It’s excellent. Give it to our business client or customer or whoever, just to click for it and make them, you know, to love this.

And if this doesn’t work, what can else we actually do to discourage from doing nor really beneficial thing? There are, you know, several ideas, and one of them is using story points. And now I need another volunteer. How do you think it’s a good idea or not? Simply yes or no. Ok, yes, ok.  Just move on. 

So, you use story points and give high estimates. And yeah, I think it’s a common mistake, we use to give high estimate if we want to scare our customers and why it’s not enough. Basically customers doesn’t understand story points.  You know, you can try to teach them. You can say them “Ok, it’s this and this. You shouldn’t add it. You shouldn’t do something, you know. There are only the measures for us. “They won’t understand it, they have their concept of numbers and we should more or less take this bitter truth and move on. And moreover, our business clients are not stupid people, maybe one big estimate would be enough to scare the client. But if we always give big estimates, guess what, then they thought “Oh, my God, everything is so hard. Hm, they are lazy. That’s why they give big estimates. They don’t want to have challenging tasks.” Or any other explanation because it’s, you know, keep continuing. Moreover they love to map story boards to the things they know, for example to the money, to time, to hours, whatever. You can choose. They have special spreadsheets to map it and they have special magic formulas. And the most important thing, they don’t know that the implementation is not beneficial for them because it’s, you know, generally we are a team. I know that we are working in different business models and sometimes we are working in internal IT department and , you know, it’s more feel like a team. And sometimes we are outsourcing company, sometimes we are offshoring company, and sometimes we are using any other model and sometimes we are just selling box to the market and we don’t know our customers. But, basically, we are kind of a team. 

So, what we can add to make this process easier is we can ask our customers to give business value to us, connected with feature and of course you can estimate risk. You can argue that story points contains risks. But, why not expose it? It would be easier for our recipients. Basically, if we have only thing like this our customer “Ok. 21, it’s a number.” And if you know a Fibonacci number, you know that it’s actually quite big. If we give things like this, so risk in that t-shirt sizes…and you want to calculate it. But they calculate it nevertheless, but still. And if you ask about business value, then basically you have more information. And if you give this alternative and show that, you know, we can reduce the risk, the business value which is estimated by customer is likely lower, but still it’s more worthy to, you know, take less risky thing and move on and have, you know, also quite big business value. It is also useful if you are product owner and want to justify why you are throwing away a feature because maybe it’s not worthy to have a lot of effort and take a risky thing, it’s really low business value. If we don’t force people to think about business value, they tend to say that everything is important and everything should be tomorrow. And, of course, our clients could behave like us so they could give us big estimates for the business value always. But we should communicate. 

Ok, so, the art of giving argument it would be like quick because we now know how to present it. We should, you know, identify alternative and basically show it. And, you know, compare them. So, we should compare the things that are inside the alternatives because maybe this need here is really, really important. We cannot just change the story, the feature, because this is a crucial part of it. So, basically what these things are doing, usually we are all busy people. If we have visual indication then we can make easier choice and also please, add recommendation. And because recommendation also is some like check point that the business actually take the right decision. 

So, because I ran over the time, I’ll just look really quickly through the tips and tricks. Diplomacy is all about, I said before so just encourage people take decisions that you want. So, remember that users will use your apps so create a masterpiece not the ordinary software. And if you give too many options to choose to business, they probably won’t probably be able to make any decision. So, alternatives, yes, but, you know, make one alternative. Then it’d be ok. 

And quick summary. Don’t be scared to express your opinion. Remember that if you have your own opinion, it’s not mean that you are aggressive. Discover you own communication style. Don’t be afraid to ask. Boost your communication by visualization. Ask, you know, nice things like risk and business value. Present alternatives, and it’s really, really quick finish.

Thank you for your attention. And now cheer up Zuzi because she’s next and she’s have really awesome presentation. So, cheer up. I can’t hear, you! Come on, guys!   

 





